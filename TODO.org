#+Title: TODOs for moka-mode

* TODO General
  - [ ] *HIGH* Proper indentation of annotated methods
  - [X] *MED* Import generation from tags
    - I think JTags does this if tags are setup properly and fully
  - [X] Import sorting - via JTags
    - [X] *LOW* Can we remove unused imports easily?
  - [X] Cleanup of the moka source
    - Could still use more, but sure.
  - [ ] Indenter (might be external. Ideally supports XML config from
    eclipse, and the options defined there)
    - could perhaps use eclipse itself.

* TODO Tags
  Currently thinking about how to adopt something else
  completely. TAGS have lots of limitations but jtags is pretty well
  written, and much of the functionality could be kept, I think, with
  another "tag" input source. An ideal solution involves the
  following:

  - For each package, generate an lisp datastructure that has the following form:

    (package-name (class filename ((method lineno (args) ...))) ...)

  - We then need an inverted index from Classname to packages

    (classname (package-name ...))

    - This would ideally order packages by usage in a codebase, for
      the purposes of probablistically correct guesses



* TODO Testing
  - [ ] *MED* Run test at point (via mvn)
  - [X] *MED* Run all tests in file (via mvn)
    - requires package / class discovery.
  - [ ] *HIGH* Jump to location in files referenced (should be pretty
    easy to)
    - Ultimately it's just defining a regexp and adding it to a list,
      but how do we deal with different output?
    - Does maven standardize this because it has a test runner?

* TODO Exploratory
  - [ ] Integrate a shell / repl of some sort to cut down on boilerplate
    - I don't think Clojure is *right* for this task. Need very good
      dynamic class loading / replacement so as to not need to restart
      so often.
      - beanshell (https://github.com/nicedevs/BeanShell2)
      - Groovy
      - Sisc ?
      - kawa ?

* Maven
  - [ ] Execute common tasks simply and easily
    - Have to switch to directory, but otherwise, should be done --
      not documented.
  - [ ] Discover goals
  - [ ] *INPROG* Discover classpath, relates to tag stuff
    - Can do this, but I'm not sure it's really useful. Classpath is
      too large to be effective for much.
    - Should attempt to find immediate dependencies in the project POM
      and deal with those.
